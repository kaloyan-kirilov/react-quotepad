{"version":3,"sources":["components/InfoText.js","components/AddButton.js","components/PadHeader.js","components/Quote.js","components/Quotes.js","components/NoQuotes.js","components/QuoteForm.js","components/FooterText.js","components/SubmitMessage.js","components/FontPreload.js","config/firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["InfoText","className","AddButton","onClick","text","icon","Header","toggle","showForm","Quote","quote","author","username","style","fontFamily","Quotes","quotes","map","id","NoQuotes","QuoteForm","onAdd","useState","setText","setAuthor","setUsername","submitMessage","document","querySelector","showMessage","opacity","pointerEvents","onSubmit","e","preventDefault","type","maxLength","placeholder","value","onChange","target","required","FooterText","href","rel","SubmitMessage","fontSize","FontPreload","position","zIndex","color","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","quoteStorage","database","ref","App","showQuoteForm","setShowQuoteForm","setQuotes","useEffect","a","on","snapshot","fireQuotes","val","quotesArray","Object","values","getQuotes","PadHeader","Math","floor","random","push","set","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb7687f2.chunk.js","sourcesContent":["function InfoText() {\r\n    return (\r\n        <div className='info-container'>\r\n            <div className='info-text'>Read & write wise, inspirational or funny quotes to brighten & enligthen your day</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoText;","const AddButton = ({ onClick, text, icon }) => {\r\n    return (\r\n        <button className='add-button' onClick={onClick}>{text} {icon}</button>\r\n    )\r\n}\r\n\r\nexport default AddButton;","import AddButton from './AddButton';\r\nimport { BsPencilSquare } from 'react-icons/bs';\r\n\r\nconst Header = ({ toggle, showForm }) => {\r\n    return (\r\n        <header className='app-header'>\r\n            <h1 className='app-title'>QuotePad</h1>\r\n            <AddButton text={showForm ? 'Close' : 'Add'} icon={!showForm && <BsPencilSquare className='icon' />} onClick={toggle} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","const Quote = ({ quote }) => {\r\n    return (\r\n        <div className='quote'>\r\n            <div className='quote-text'>\"{quote.quote}\"</div>\r\n            <div className='author'>- {quote.author}</div>\r\n            <div className='username'>~ {quote.username}&nbsp;<div style={{ fontFamily: 'Hi Melody' }}>*</div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote;","import Quote from './Quote'\r\n\r\nconst Quotes = ({ quotes }) => {\r\n    return (\r\n        <div className='quotes-container'>\r\n            {quotes.map((quote) => (\r\n                <Quote key={quote.id} quote={quote} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quotes;","const NoQuotes = () => {\r\n    return (\r\n        <div className='no-quotes'>\r\n            <h3>Waiting for Quotes...</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoQuotes;","import { useState } from 'react';\r\nimport { VscSaveAs } from 'react-icons/vsc';\r\n\r\nconst QuoteForm = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [username, setUsername] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        onAdd({ text, author, username })\r\n\r\n        setText('')\r\n        setAuthor('')\r\n        setUsername('')\r\n\r\n        showMessage()\r\n    }\r\n\r\n    const submitMessage = document.querySelector('.submit-message')\r\n\r\n    const showMessage = () => {\r\n        submitMessage.style.opacity = '1'\r\n        submitMessage.style.pointerEvents = 'auto'\r\n    }\r\n\r\n    return (\r\n        <form className='quote-form' onSubmit={onSubmit}>\r\n            <div className='form-group'>\r\n                <label>Quote :</label>\r\n                <input type='text' maxLength='210' placeholder='Enter quote...' value={text} onChange={(e) => setText(e.target.value)} required />\r\n            </div>\r\n            <div className='form-group'>\r\n                <label>Author :</label>\r\n                <input type='text' maxLength='25' placeholder='Enter name of the author...' value={author} onChange={(e) => setAuthor(e.target.value)} required />\r\n            </div>\r\n            <div className='form-group'>\r\n                <label>Username :</label>\r\n                <input type='text' maxLength='20' placeholder='Enter your username...' value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n            </div>\r\n            <button className='write-button'><VscSaveAs className='write-icon' /> Write</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default QuoteForm;","function FooterText() {\r\n    return (\r\n        <div className='footer-text'>\r\n            <div>Developed by&nbsp;<a href='https://kaloyan-kirilov.github.io/' rel=\"noreferrer\" target='_blank'>kaloyan-kirilov.github.io</a></div>\r\n            <div>Built with React JS + Firebase</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterText;","import { FaRegThumbsUp } from 'react-icons/fa';\r\n\r\nfunction SubmitMessage() {\r\n    const submitMessage = document.querySelector('.submit-message')\r\n\r\n    const click = () => {\r\n        submitMessage.style.opacity = '0'\r\n        submitMessage.style.pointerEvents = 'none'\r\n    }\r\n\r\n    return (\r\n        <div className=\"submit-message\">\r\n            <div className=\"message-body\">\r\n                <p>Your quote has been written.</p>\r\n                <p>Thank you for your contribution!</p>\r\n                <button className=\"message-button\" onClick={click}><FaRegThumbsUp style={{ fontSize: '.8em' }} />Okay</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitMessage","function FontPreload() {\r\n    return (\r\n        <div style={{ position: 'absolute', zIndex: '-2' }}>\r\n            <p style={{ fontFamily: 'Roboto Slab', fontSize: '1px', color: 'transparent' }}>Roboto Slab</p>\r\n            <p style={{ fontFamily: 'Oleo Script Swash Caps', fontSize: '1px', color: 'transparent' }} >Oleo Script Swash Caps</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FontPreload","export const firebaseConfig = {\r\n    apiKey: `${process.env.REACT_APP_API_KEY}`,\r\n    authDomain: \"react-quotepad.firebaseapp.com\",\r\n    databaseURL: \"https://react-quotepad-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"react-quotepad\",\r\n    storageBucket: \"react-quotepad.appspot.com\",\r\n    messagingSenderId: \"1046353058359\",\r\n    appId: \"1:1046353058359:web:dc61d1c4fbc5ca64117db2\"\r\n};\r\n\r\nexport default firebaseConfig;","import { useState, useEffect } from \"react\";\nimport InfoText from \"./components/InfoText\";\nimport PadHeader from \"./components/PadHeader\";\nimport Quotes from \"./components/Quotes\";\nimport NoQuotes from \"./components/NoQuotes\";\nimport QuoteForm from \"./components/QuoteForm\";\nimport FooterText from \"./components/FooterText\";\nimport SubmitMessage from \"./components/SubmitMessage\";\nimport FontPreload from \"./components/FontPreload\";\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport firebaseConfig from './config/firebaseConfig';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst quoteStorage = firebase.database().ref('quotes')\n\nfunction App() {\n  const [showQuoteForm, setShowQuoteForm] = useState(false)\n\n  const [quotes, setQuotes] = useState([])\n\n  useEffect(() => {\n    const getQuotes = async () => {\n      quoteStorage.on('value', (snapshot) => {\n        const fireQuotes = snapshot.val()\n\n        if (fireQuotes !== null) {\n          const quotesArray = Object.values(fireQuotes)\n          setQuotes(quotesArray)\n        } \n      })\n    }\n\n    getQuotes()\n  }, [])\n\n  // Add New Quote\n  const addQuote = (quote) => {\n    const id = Math.floor(Math.random() * 100000000) + 1\n\n    const saveQuote = quoteStorage.push()\n    saveQuote.set({\n      id: id,\n      quote: quote.text,\n      author: quote.author,\n      username: quote.username\n    })\n  }\n\n  // Toggle Add Form\n  const toggleForm = () => {\n    setShowQuoteForm(!showQuoteForm)\n  }\n\n  return (\n    <div className=\"container\">\n      <InfoText />\n      <div className=\"quote-pad\">\n        <PadHeader toggle={toggleForm} showForm={showQuoteForm} />\n        {showQuoteForm && <QuoteForm onAdd={addQuote} />}\n        {quotes.length > 0 ? <Quotes quotes={quotes} /> : <NoQuotes />}\n      </div>\n      <FooterText />\n      <SubmitMessage />\n      <FontPreload />\n      <div className=\"background-img\"></div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}